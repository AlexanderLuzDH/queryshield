version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: queryshield-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: queryshield_saas
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: queryshield-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: queryshield-api
    environment:
      DEBUG: "True"
      ENV: "development"
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/queryshield_saas"
      REDIS_URL: "redis://redis:6379"
      SECRET_KEY: "dev-secret-key-change-in-production"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app/queryshield_saas
    command: uvicorn queryshield_saas.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend (placeholder)
  frontend:
    image: node:20-alpine
    container_name: queryshield-frontend
    working_dir: /app
    environment:
      VITE_API_URL: "http://localhost:8000/api"
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run dev"

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: queryshield-network
